{
  "0": {
    "id": "0",
    "title": "",
    "content": "  404  Page not found :(  The requested page could not be found.",
    "url": "http://localhost:4000/404/",
    "relUrl": "/404/"
  },
  "1": {
    "id": "1",
    "title": "Release Management",
    "content": "Release Management  Intro  Git Flow  IntegrationsIntroThese spacers are available to use for margins and padding with responsive utility classes. Combine these prefixes with a screen size and spacing scale to use them responsively.            Classname prefix      What it does                  .m-      margin              .mx-      margin-left, margin-right              .my-      margin top, margin bottom              .mt-      margin-top              .mr-      margin-right              .mb-      margin-bottom              .ml-      margin-left                  Classname prefix      What it does                  .p-      padding              .px-      padding-left, padding-right              .py-      padding top, padding bottom              .pt-      padding-top              .pr-      padding-right              .pb-      padding-bottom              .pl-      padding-left      Spacing values are based on a 1rem = 16px spacing scale, broken down into these units:            Spacer/suffix      Size in rems      Rem converted to px                  1      0.25rem      4px              2      0.5rem      8px              3      0.75rem      12px              4      1rem      16px              5      1.5rem      24px              6      2rem      32px              7      2.5rem      40px              8      3rem      48px      ExamplesIn Markdown, use the `{: }` wrapper to apply custom classes:This paragraph will have a margin bottom of 1rem/16px at large screens.{: .mb-lg-4 }This paragraph will have 2rem/32px of padding on the right and left at all screen sizes.{: .px-6 }Git Flow            Classname      What it does                  .v-align-baseline      vertical-align: baseline              .v-align-bottom      vertical-align: bottom              .v-align-middle      vertical-align: middle              .v-align-text-bottom      vertical-align: text-bottom              .v-align-text-top      vertical-align: text-top              .v-align-top      vertical-align: top      IntegrationsDisplay classes aid in adapting the layout of the elements on a page:            Class                         .d-block      display: block              .d-flex      display: flex              .d-inline      display: inline              .d-inline-block      display: inline-block              .d-none      display: none      Use these classes in conjunction with the responsive modifiers.ExamplesIn Markdown, use the `{: }` wrapper to apply custom classes:This button will be hidden until medium screen sizes:[ A button ](#url){: .d-none .d-md-inline-block }These headings will be `inline-block`:### heading 3{ .d-inline-block }### heading 3{ .d-inline-block }",
    "url": "http://localhost:4000/docs/Development%20Processes/Deployment/",
    "relUrl": "/docs/Development%20Processes/Deployment/"
  },
  "2": {
    "id": "2",
    "title": "Best Practices",
    "content": "Best PracticesDeveloper Best Practices",
    "url": "http://localhost:4000/docs/Development%20Processes/Development-Best-Practices/",
    "relUrl": "/docs/Development%20Processes/Development-Best-Practices/"
  },
  "3": {
    "id": "3",
    "title": "Platform",
    "content": "PlatformCSS utility classes come in handy when you to want to override default styles to give create additional whitespace (margins/padding), unexpected shifts in font-size or weight, add color, or to hide (or show) something a specific screen size.Lorem ipsum…",
    "url": "http://localhost:4000/docs/Development%20Processes/Platform/",
    "relUrl": "/docs/Development%20Processes/Platform/"
  },
  "4": {
    "id": "4",
    "title": "Project Teams",
    "content": "Project Teams  Spacing  Vertical Alignment  DisplaySpacingThese spacers are available to use for margins and padding with responsive utility classes. Combine these prefixes with a screen size and spacing scale to use them responsively.            Classname prefix      What it does                  .m-      margin              .mx-      margin-left, margin-right              .my-      margin top, margin bottom              .mt-      margin-top              .mr-      margin-right              .mb-      margin-bottom              .ml-      margin-left                  Classname prefix      What it does                  .p-      padding              .px-      padding-left, padding-right              .py-      padding top, padding bottom              .pt-      padding-top              .pr-      padding-right              .pb-      padding-bottom              .pl-      padding-left      Spacing values are based on a 1rem = 16px spacing scale, broken down into these units:            Spacer/suffix      Size in rems      Rem converted to px                  1      0.25rem      4px              2      0.5rem      8px              3      0.75rem      12px              4      1rem      16px              5      1.5rem      24px              6      2rem      32px              7      2.5rem      40px              8      3rem      48px      ExamplesIn Markdown, use the `{: }` wrapper to apply custom classes:This paragraph will have a margin bottom of 1rem/16px at large screens.{: .mb-lg-4 }This paragraph will have 2rem/32px of padding on the right and left at all screen sizes.{: .px-6 }Vertical Alignment            Classname      What it does                  .v-align-baseline      vertical-align: baseline              .v-align-bottom      vertical-align: bottom              .v-align-middle      vertical-align: middle              .v-align-text-bottom      vertical-align: text-bottom              .v-align-text-top      vertical-align: text-top              .v-align-top      vertical-align: top      DisplayDisplay classes aid in adapting the layout of the elements on a page:            Class                         .d-block      display: block              .d-flex      display: flex              .d-inline      display: inline              .d-inline-block      display: inline-block              .d-none      display: none      Use these classes in conjunction with the responsive modifiers.ExamplesIn Markdown, use the `{: }` wrapper to apply custom classes:This button will be hidden until medium screen sizes:[ A button ](#url){: .d-none .d-md-inline-block }These headings will be `inline-block`:### heading 3{ .d-inline-block }### heading 3{ .d-inline-block }",
    "url": "http://localhost:4000/docs/Development%20Processes/Project-Teams/",
    "relUrl": "/docs/Development%20Processes/Project-Teams/"
  },
  "5": {
    "id": "5",
    "title": "Channels",
    "content": "ChannelsCSS utility classes come in handy when you to want to override default styles to give create additional whitespace (margins/padding), unexpected shifts in font-size or weight, add color, or to hide (or show) something a specific screen size.",
    "url": "http://localhost:4000/docs/Channels",
    "relUrl": "/docs/Channels"
  },
  "6": {
    "id": "6",
    "title": "Development Processes",
    "content": "Development Processes  Main navigation  Ordering pages  Excluding pages  Pages with children          Child pages      Children with children        In-page navigation with Table of ContentsMain navigationThe main navigation for your Just the Docs site is on the left side of the page at large screens and on the top (behind a tap) on small screens. The main navigation can be structured to accommodate a multi-level menu system (pages with children and grandchildren).By default, all pages will appear as top level pages in the main nav unless a parent page is defined (see Pages with Children).Ordering pagesTo specify a page order, use the nav_order variable in your pages’ YAML front matter.Example---layout: defaulttitle: Customizationnav_order: 4---Excluding pagesFor specific pages that you do not wish to include in the main navigation, e.g. a 404 page or a landing page. Use the nav_exclude: true parameter in the YAML front matter for that page.Example---layout: defaulttitle: 404nav_exclude: true---Pages with childrenSometimes you will want to create a page with many children (a section). First, it is recommended that you keep pages that are related in a directory together… For example, in these docs, we keep all of the written documentation in the ./docs directory and each of the sections in subdirectories like ./docs/ui-components and ./docs/utilities. This gives is an organization like:+-- ..|-- (Jekyll files)||-- docs|   |-- ui-components|   |   |-- ui-components.md  (parent page)|   |   |-- buttons.md|   |   |-- code.md|   |   |-- labels.md|   |   |-- tables.md|   |   +-- typography.md|   ||   |-- utilities|   |   |-- utilities.md      (parent page)|   |   |-- color.md|   |   |-- layout.md|   |   |-- responsive-modifiers.md|   |   +-- typography.md|   ||   |-- (other md files, pages with no children)|   +-- ..||-- (Jekyll files)+-- ..On the parent pages, add 2 YAML front matter variables:  has_children: true (tells us that this a parent page)  permalink: set this to the site directories that the contains the pagesExample---layout: defaulttitle: UI Componentsnav_order: 2has_children: truepermalink: /docs/ui-components---Here we’re setting up the UI Components landing page that is available at /docs/ui-components, it has children and is ordered second in the main nav.Child pagesOn child pages, simply set the parent: YAML front matter to whatever the parent’s page title is and set a nav order (this number is now scoped within the section).Example---layout: defaulttitle: Buttonsparent: UI Componentsnav_order: 2---The Buttons page appears a child of UI Components and appears second in the UI Components section.Children with childrenChild pages can also have children (grand children). This is achieved by using a similar pattern on the child and grand child pages.  Add the has_children attribute to the child  Add the parent and grand_parent attribute to the grandchildExample---layout: defaulttitle: Buttonsparent: UI Componentsnav_order: 2has_children: true------layout: defaulttitle: Buttons Child Pageparent: Buttonsgrand_parent: UI Componentsnav_order: 1---Would create the following navigation structure:+-- ..||-- UI Components|   |-- ..|   ||   |-- Buttons|   |   |-- Button Child Page|   ||   |-- ..|+-- ..Example# Aux links for the upper right navigationaux_links:&quot;Just the Docs on GitHub&quot;:    - &quot;//github.com/pmarsceill/just-the-docs&quot;In-page navigation with Table of ContentsTo generate a Table of Contents on your docs pages, you can use the {:toc} method from Kramdown, immediately after an &amp;lt;ol&amp;gt; in markdown. This will automatically generate an ordered list of anchor links to various sections of page based on headings and heading levels. There may be occasions where you’re using a heading and you don’t want it to show up in the TOC, to skip a particular heading use the {: .no_toc } CSS class.Example# Navigation Structure{: .no_toc }## {: .no_toc .text-delta }1. TOC{:toc}This example skips the page name heading (#) from the TOC, as well as the heading for the Table of Contents itself (##) because it is redundant, followed by the table of contents itself.",
    "url": "http://localhost:4000/docs/Development%20Processes",
    "relUrl": "/docs/Development Processes"
  },
  "7": {
    "id": "7",
    "title": "Home",
    "content": "Salesforce practice at MIL CorpThe standards guide shares foundational and structural content behind the sfMIL practice.Get started now ContactGetting startedDependenciesJust the Docs is built for Jekyll, a static site generator. View the quick start guide for more information. Just the Docs requires no special Jekyll plugins and can run on GitHub Pages standard Jekyll compiler.Quick start: Use as a GitHub Pages remote theme  Add Just the Docs to your Jekyll site’s _config.yml as a remote theme    remote_theme: pmarsceill/just-the-docs        You must have GitHub pages enabled on your repo, one or more markdown files, and a _config.yml file. See an example repository  Local installation: Use the gem-based theme  Install the Ruby Gem    $ gem install just-the-docs        # .. or add it to your your Jekyll site’s Gemfilegem &quot;just-the-docs&quot;        Add Just the Docs to your Jekyll site’s _config.yml    theme: &quot;just-the-docs&quot;        Optional: Initialize search data (creates search-data.json)    $ bundle exec just-the-docs rake search:init        Run you local Jekyll server    $ jekyll serve        # .. or if you're using a Gemfile (bundler)$ bundle exec jekyll serve        Point your web browser to http://localhost:4000About the projectJust the Docs is © 2017 by Patrick Marsceill.LicenseJust the Docs is distributed by an MIT license.ContributingWhen contributing to this repository, please first discuss the change you wish to make via issue,email, or any other method with the owners of this repository before making a change. Read more about becoming a contributor in our GitHub repo.Code of ConductJust the Docs is committed to fostering a welcoming community.View our Code of Conduct on our GitHub repository.",
    "url": "http://localhost:4000/",
    "relUrl": "/"
  },
  "8": {
    "id": "8",
    "title": "Microsoft Teams",
    "content": "Microsoft TeamsJust the Docs spacing works in conjunction with a variety of modifiers that allow you to target specific screen sizes responsively. Use these in conjunction with spacing and display prefix and suffix classes.            Modifier      Screen size                  (none)      All screens until the next modifier              xs      320px (20rem) and up              sm      500px (31.25rem) and up              md      740px (46.25rem) and up              lg      1120px (70rem) and up              xl      1400px (87.5rem) and up      ",
    "url": "http://localhost:4000/docs/Channels/microsoft-teams/",
    "relUrl": "/docs/Channels/microsoft-teams/"
  },
  "9": {
    "id": "9",
    "title": "Monthly Sync",
    "content": "Monthly Sync  Spacing  Vertical Alignment  DisplaySpacingThese spacers are available to use for margins and padding with responsive utility classes. Combine these prefixes with a screen size and spacing scale to use them responsively.            Classname prefix      What it does                  .m-      margin              .mx-      margin-left, margin-right              .my-      margin top, margin bottom              .mt-      margin-top              .mr-      margin-right              .mb-      margin-bottom              .ml-      margin-left                  Classname prefix      What it does                  .p-      padding              .px-      padding-left, padding-right              .py-      padding top, padding bottom              .pt-      padding-top              .pr-      padding-right              .pb-      padding-bottom              .pl-      padding-left      Spacing values are based on a 1rem = 16px spacing scale, broken down into these units:            Spacer/suffix      Size in rems      Rem converted to px                  1      0.25rem      4px              2      0.5rem      8px              3      0.75rem      12px              4      1rem      16px              5      1.5rem      24px              6      2rem      32px              7      2.5rem      40px              8      3rem      48px      ExamplesIn Markdown, use the `{: }` wrapper to apply custom classes:This paragraph will have a margin bottom of 1rem/16px at large screens.{: .mb-lg-4 }This paragraph will have 2rem/32px of padding on the right and left at all screen sizes.{: .px-6 }Vertical Alignment            Classname      What it does                  .v-align-baseline      vertical-align: baseline              .v-align-bottom      vertical-align: bottom              .v-align-middle      vertical-align: middle              .v-align-text-bottom      vertical-align: text-bottom              .v-align-text-top      vertical-align: text-top              .v-align-top      vertical-align: top      DisplayDisplay classes aid in adapting the layout of the elements on a page:            Class                         .d-block      display: block              .d-flex      display: flex              .d-inline      display: inline              .d-inline-block      display: inline-block              .d-none      display: none      Use these classes in conjunction with the responsive modifiers.ExamplesIn Markdown, use the `{: }` wrapper to apply custom classes:This button will be hidden until medium screen sizes:[ A button ](#url){: .d-none .d-md-inline-block }These headings will be `inline-block`:### heading 3{ .d-inline-block }### heading 3{ .d-inline-block }",
    "url": "http://localhost:4000/docs/Syncs/monthly-sync/",
    "relUrl": "/docs/Syncs/monthly-sync/"
  },
  "10": {
    "id": "10",
    "title": "Quarterly MVP!",
    "content": "Quarterly MVP!  Spacing  Vertical Alignment  DisplaySpacingThese spacers are available to use for margins and padding with responsive utility classes. Combine these prefixes with a screen size and spacing scale to use them responsively.            Classname prefix      What it does                  .m-      margin              .mx-      margin-left, margin-right              .my-      margin top, margin bottom              .mt-      margin-top              .mr-      margin-right              .mb-      margin-bottom              .ml-      margin-left                  Classname prefix      What it does                  .p-      padding              .px-      padding-left, padding-right              .py-      padding top, padding bottom              .pt-      padding-top              .pr-      padding-right              .pb-      padding-bottom              .pl-      padding-left      Spacing values are based on a 1rem = 16px spacing scale, broken down into these units:            Spacer/suffix      Size in rems      Rem converted to px                  1      0.25rem      4px              2      0.5rem      8px              3      0.75rem      12px              4      1rem      16px              5      1.5rem      24px              6      2rem      32px              7      2.5rem      40px              8      3rem      48px      ExamplesIn Markdown, use the `{: }` wrapper to apply custom classes:This paragraph will have a margin bottom of 1rem/16px at large screens.{: .mb-lg-4 }This paragraph will have 2rem/32px of padding on the right and left at all screen sizes.{: .px-6 }Vertical Alignment            Classname      What it does                  .v-align-baseline      vertical-align: baseline              .v-align-bottom      vertical-align: bottom              .v-align-middle      vertical-align: middle              .v-align-text-bottom      vertical-align: text-bottom              .v-align-text-top      vertical-align: text-top              .v-align-top      vertical-align: top      DisplayDisplay classes aid in adapting the layout of the elements on a page:            Class                         .d-block      display: block              .d-flex      display: flex              .d-inline      display: inline              .d-inline-block      display: inline-block              .d-none      display: none      Use these classes in conjunction with the responsive modifiers.ExamplesIn Markdown, use the `{: }` wrapper to apply custom classes:This button will be hidden until medium screen sizes:[ A button ](#url){: .d-none .d-md-inline-block }These headings will be `inline-block`:### heading 3{ .d-inline-block }### heading 3{ .d-inline-block }",
    "url": "http://localhost:4000/docs/Syncs/quarterly-mvp/",
    "relUrl": "/docs/Syncs/quarterly-mvp/"
  },
  "11": {
    "id": "11",
    "title": "Slack",
    "content": "SlackJust the Docs spacing works in conjunction with a variety of modifiers that allow you to target specific screen sizes responsively. Use these in conjunction with spacing and display prefix and suffix classes.            Modifier      Screen size                  (none)      All screens until the next modifier              xs      320px (20rem) and up              sm      500px (31.25rem) and up              md      740px (46.25rem) and up              lg      1120px (70rem) and up              xl      1400px (87.5rem) and up      ",
    "url": "http://localhost:4000/docs/Channels/sfmil-slack/",
    "relUrl": "/docs/Channels/sfmil-slack/"
  },
  "12": {
    "id": "12",
    "title": "Sucessess",
    "content": "SucessessJust the Docs has some specific configuration parameters that can be definied in your Jekyll site’s _config.yml file.Search enabled# Enable or disable the site searchsearch_enabled: true",
    "url": "http://localhost:4000/docs/sucessess/",
    "relUrl": "/docs/sucessess/"
  },
  "13": {
    "id": "13",
    "title": "Syncs",
    "content": "SyncsCSS utility classes come in handy when you to want to override default styles to give create additional whitespace (margins/padding), unexpected shifts in font-size or weight, add color, or to hide (or show) something a specific screen size.",
    "url": "http://localhost:4000/docs/Syncs",
    "relUrl": "/docs/Syncs"
  },
  "14": {
    "id": "14",
    "title": "Team Trailhead",
    "content": "",
    "url": "http://localhost:4000/docs/team-trailhead/",
    "relUrl": "/docs/team-trailhead/"
  },
  "15": {
    "id": "15",
    "title": "Town Hall",
    "content": "Town Hall  Spacing  Vertical Alignment  DisplaySpacingThese spacers are available to use for margins and padding with responsive utility classes. Combine these prefixes with a screen size and spacing scale to use them responsively.            Classname prefix      What it does                  .m-      margin              .mx-      margin-left, margin-right              .my-      margin top, margin bottom              .mt-      margin-top              .mr-      margin-right              .mb-      margin-bottom              .ml-      margin-left                  Classname prefix      What it does                  .p-      padding              .px-      padding-left, padding-right              .py-      padding top, padding bottom              .pt-      padding-top              .pr-      padding-right              .pb-      padding-bottom              .pl-      padding-left      Spacing values are based on a 1rem = 16px spacing scale, broken down into these units:            Spacer/suffix      Size in rems      Rem converted to px                  1      0.25rem      4px              2      0.5rem      8px              3      0.75rem      12px              4      1rem      16px              5      1.5rem      24px              6      2rem      32px              7      2.5rem      40px              8      3rem      48px      ExamplesIn Markdown, use the `{: }` wrapper to apply custom classes:This paragraph will have a margin bottom of 1rem/16px at large screens.{: .mb-lg-4 }This paragraph will have 2rem/32px of padding on the right and left at all screen sizes.{: .px-6 }Vertical Alignment            Classname      What it does                  .v-align-baseline      vertical-align: baseline              .v-align-bottom      vertical-align: bottom              .v-align-middle      vertical-align: middle              .v-align-text-bottom      vertical-align: text-bottom              .v-align-text-top      vertical-align: text-top              .v-align-top      vertical-align: top      DisplayDisplay classes aid in adapting the layout of the elements on a page:            Class                         .d-block      display: block              .d-flex      display: flex              .d-inline      display: inline              .d-inline-block      display: inline-block              .d-none      display: none      Use these classes in conjunction with the responsive modifiers.ExamplesIn Markdown, use the `{: }` wrapper to apply custom classes:This button will be hidden until medium screen sizes:[ A button ](#url){: .d-none .d-md-inline-block }These headings will be `inline-block`:### heading 3{ .d-inline-block }### heading 3{ .d-inline-block }",
    "url": "http://localhost:4000/docs/Syncs/town-hall/",
    "relUrl": "/docs/Syncs/town-hall/"
  }
}
